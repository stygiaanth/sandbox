---
# --------------------
# 1) Namespace
# --------------------
apiVersion: v1
kind: Namespace
metadata:
  name: {{ .Values.namespace.name }}
---
# --------------------
# 2) Echo App #1 Deployment & Service
# --------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: echo-app1
  namespace: {{ .Values.namespace.name }}
  labels:
    app: echo-app1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: echo-app1
  template:
    metadata:
      labels:
        app: echo-app1
    spec:
      containers:
        - name: echo
          # http-echo listens on port 5678 by default and returns a static text
          image: hashicorp/http-echo:0.2.3
          args:
            - "-text=Hello from App1"
          ports:
            - containerPort: 5678
              name: http
---
apiVersion: v1
kind: Service
metadata:
  name: echo-app1-svc
  namespace: {{ .Values.namespace.name }}
spec:
  selector:
    app: echo-app1
  ports:
    - port: 80
      targetPort: 5678
      protocol: TCP
      name: http
---
# --------------------
# 3) Echo App #2 Deployment & Service
# --------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: echo-app2
  namespace: {{ .Values.namespace.name }}
  labels:
    app: echo-app2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: echo-app2
  template:
    metadata:
      labels:
        app: echo-app2
    spec:
      containers:
        - name: echo
          image: hashicorp/http-echo:0.2.3
          args:
            - "-text=Greetings from App2"
          ports:
            - containerPort: 5678
              name: http
---
apiVersion: v1
kind: Service
metadata:
  name: echo-app2-svc
  namespace: {{ .Values.namespace.name }}
spec:
  selector:
    app: echo-app2
  ports:
    - port: 80
      targetPort: 5678
      protocol: TCP
      name: http
---
# --------------------
# 4) Ingress #1 (valid for nginx-trial)
# --------------------
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-app1
  namespace: {{ .Values.namespace.name }}
spec:
  ingressClassName: {{ .Values.ingress.ingress_class_name }}
  rules:
    - host: app1.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: echo-app1-svc
                port:
                  number: 80
---
# --------------------
# 5) Ingress #2 (valid for nginx-trial)
# --------------------
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-app2
  namespace: {{ .Values.namespace.name }}
spec:
  ingressClassName: {{ .Values.ingress.ingress_class_name }}
  rules:
    - host: app2.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: echo-app2-svc
                port:
                  number: 80
---
# --------------------
# 6) Ingress #3 (ignored by nginx-trial controller)
# --------------------
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-ignore
  namespace: {{ .Values.namespace.name }}
spec:
  # No ingressClassName here, so controller won't pick it up
  rules:
    - host: ignore.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: echo-app1-svc
                port:
                  number: 80
